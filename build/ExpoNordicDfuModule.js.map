{"version":3,"file":"ExpoNordicDfuModule.js","sourceRoot":"","sources":["../src/ExpoNordicDfuModule.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,mBAAmB,EAAE,MAAM,MAAM,CAAA;AAExD,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAA;AAiCvC,MAAM,SAAS,GAAG,mBAAmB,CAAsB,qBAAqB,CAAC,CAAA;AAEjF,MAAM,oBAAoB;IACJ;IAApB,YAAoB,SAA8B;QAA9B,cAAS,GAAT,SAAS,CAAqB;IAAG,CAAC;IAEtD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,SAAS,CAAA;IACvB,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,MAAsB;QACnC,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE,CAAC;YAC1B,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,CACrC,MAAM,CAAC,aAAa,EACpB,MAAM,CAAC,OAAO,EACd;gBACE,aAAa,EAAE,MAAM,CAAC,aAAa;gBACnC,qCAAqC,EAAE,MAAM,CAAC,qCAAqC;gBACnF,kCAAkC,EAAE,MAAM,CAAC,kCAAkC;gBAC7E,sBAAsB,EAAE,MAAM,CAAC,sBAAsB;aACtD,EACD;gBACE,iBAAiB,EAAE,MAAM,CAAC,GAAG,EAAE,iBAAiB;aACjD,CACF,CAAA;QACH,CAAC;aAAM,CAAC;YACN,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,eAAe,CACzC,MAAM,CAAC,aAAa,EACpB,MAAM,CAAC,OAAO,EACd;gBACE,aAAa,EAAE,MAAM,CAAC,aAAa;gBACnC,qCAAqC,EAAE,MAAM,CAAC,qCAAqC;gBACnF,kCAAkC,EAAE,MAAM,CAAC,kCAAkC;gBAC7E,sBAAsB,EAAE,MAAM,CAAC,sBAAsB;aACtD,EACD;gBACE,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,UAAU;gBACtC,QAAQ,EAAE,MAAM,CAAC,OAAO,EAAE,QAAQ;gBAClC,eAAe,EAAE,MAAM,CAAC,OAAO,EAAE,eAAe;gBAChD,sEAAsE;gBACtE,UAAU,EAAE,MAAM,CAAC,OAAO,EAAE,UAAU;gBACtC,WAAW,EAAE,MAAM,CAAC,OAAO,EAAE,WAAW;aACzC,CACF,CAAA;QACH,CAAC;IACH,CAAC;IAED,KAAK,CAAC,QAAQ;QACZ,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE,CAAC;YAC1B,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAA;QAC3C,CAAC;aAAM,CAAC;YACN,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAA;QAC/C,CAAC;IACH,CAAC;CACF;AAED,eAAe,IAAI,oBAAoB,CAAC,SAAS,CAAC,CAAA","sourcesContent":["import { NativeModule, requireNativeModule } from 'expo'\nimport { ExpoSettingsModuleEvents, StartDFUParams } from './ExpoNordicDfu.types'\nimport { Platform } from 'react-native'\n\ntype DfuOptions = {\n  disableResume?: boolean\n  forceScanningForNewAddressInLegacyDfu?: boolean\n  packetReceiptNotificationParameter?: number\n  prepareDataObjectDelay?: number\n}\n\ntype IosDfuOptions = {\n  connectionTimeout?: number\n}\n\ntype AndroidDfuOptions = {\n  deviceName?: string\n  keepBond?: boolean\n  numberOfRetries?: number\n  rebootTime?: number\n  restoreBond?: boolean\n}\n\ndeclare class ExpoNordicDfuModule extends NativeModule<ExpoSettingsModuleEvents> {\n  startAndroidDfu(\n    deviceAddress: string,\n    fileUri: string,\n    options?: DfuOptions,\n    androidOptions?: AndroidDfuOptions\n  ): Promise<void>\n  abortAndroidDfu(): Promise<void>\n  startIosDfu(deviceAddress: string, fileUri: string, options?: DfuOptions, iosOptions?: IosDfuOptions): Promise<void>\n  abortIosDfu(): Promise<void>\n}\n\nconst DfuModule = requireNativeModule<ExpoNordicDfuModule>('ExpoNordicDfuModule')\n\nclass CrossplatformWrapper {\n  constructor(private dfuModule: ExpoNordicDfuModule) {}\n\n  get module() {\n    return this.dfuModule\n  }\n\n  async startDfu(params: StartDFUParams): Promise<void> {\n    if (Platform.OS === 'ios') {\n      return await this.dfuModule.startIosDfu(\n        params.deviceAddress,\n        params.fileUri,\n        {\n          disableResume: params.disableResume,\n          forceScanningForNewAddressInLegacyDfu: params.forceScanningForNewAddressInLegacyDfu,\n          packetReceiptNotificationParameter: params.packetReceiptNotificationParameter,\n          prepareDataObjectDelay: params.prepareDataObjectDelay,\n        },\n        {\n          connectionTimeout: params.ios?.connectionTimeout,\n        }\n      )\n    } else {\n      return await this.dfuModule.startAndroidDfu(\n        params.deviceAddress,\n        params.fileUri,\n        {\n          disableResume: params.disableResume,\n          forceScanningForNewAddressInLegacyDfu: params.forceScanningForNewAddressInLegacyDfu,\n          packetReceiptNotificationParameter: params.packetReceiptNotificationParameter,\n          prepareDataObjectDelay: params.prepareDataObjectDelay,\n        },\n        {\n          deviceName: params.android?.deviceName,\n          keepBond: params.android?.keepBond,\n          numberOfRetries: params.android?.numberOfRetries,\n          // See android/src/main/java/com/getquip/nordic/ExpoNordicDfuModule.kt\n          rebootTime: params.android?.rebootTime,\n          restoreBond: params.android?.restoreBond,\n        }\n      )\n    }\n  }\n\n  async abortDfu(): Promise<void> {\n    if (Platform.OS === 'ios') {\n      return await this.dfuModule.abortIosDfu()\n    } else {\n      return await this.dfuModule.abortAndroidDfu()\n    }\n  }\n}\n\nexport default new CrossplatformWrapper(DfuModule)\n"]}